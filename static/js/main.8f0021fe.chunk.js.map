{"version":3,"sources":["components/AddTodoButton.js","components/TitleCard.js","components/TodoCard.js","components/TodoBuilder.js","components/CardContainer.js","App.js","index.js"],"names":["AddTodoButton","props","onClick","clickHandler","className","TitleCard","TodoCard","id","details","text","completed","completeTodo","eventHandlers","removeTodo","src","onChange","type","checked","TodoBuilder","toggled","onSubmit","e","preventDefault","target","value","console","log","addTodo","form","CardContainer","useState","todoID","incrementTodoID","todos","setTodos","completedTodos","setCompletedTodos","builderToggle","setBuilderToggle","toggleBuilder","newTodos","todo","undefined","newCompletedTodos","buildTodos","tasks","todoArray","key","push","Object","keys","length","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f0021fe.chunk.js","sourcesContent":["import './AddTodoButton.css'\r\n\r\nfunction AddTodoButton(props) {\r\n    return (\r\n        <button onClick={props.clickHandler} className=\"add-todo-button\">+</button>\r\n    )\r\n}\r\nexport default AddTodoButton;","import './AddTodoButton'\r\nimport './TitleCard.css'\r\n\r\nfunction TitleCard(props) {\r\n    return (\r\n        <div className=\"title-card\">\r\n            <h1 className=\"title\">TODO</h1>\r\n        </div>\r\n    )\r\n}\r\nexport default TitleCard;","import './TodoCard.css'\r\n\r\nfunction TodoCard(props) {\r\n    const id = props.details['id'];\r\n    const text = props.details['text'];\r\n    const completed = props.details['completed'];\r\n    const completeTodo = props.eventHandlers['completeTodo'];\r\n    const removeTodo = props.eventHandlers['removeTodo']\r\n\r\n    return (\r\n        <div className=\"todo-card-div\">\r\n            <div className=\"todo-card-checkbox-div\">\r\n                <audio src=\"/react-todo/public/dingSound.mp3\" className=\"audio\"></audio>\r\n                <input onChange={() => {completeTodo(id)}} type=\"checkbox\" checked={completed} className=\"todo-card-checkbox\"/>\r\n            </div>\r\n            <div className=\"todo-card-text-div\">\r\n                <p className=\"todo-card-text\">{text}</p>\r\n            </div>\r\n            <div className=\"todo-card-del-div\">\r\n                <button className=\"todo-card-del-btn\" onClick={() => {removeTodo(id)}}>-</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default TodoCard;","import './TodoBuilder.css'\r\n\r\nfunction TodoBuilder(props) {\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Check for empty input\r\n        if (e.target[0].value === '') {\r\n            return;\r\n        }\r\n        console.log(e.target[0].value)\r\n        let details = {\r\n            'text': e.target[0].value\r\n        }\r\n        props.addTodo(details);\r\n    }\r\n    if (props.toggled) {\r\n        return (\r\n            <div className=\"todo-builder-div\">\r\n                <form id=\"todo-form\" onSubmit={onSubmit} className=\"todo-builder-form\">\r\n                    <input className=\"todo-builder-form__input\" type=\"text\" />\r\n                </form>\r\n                <button type=\"submit\" form=\"todo-form\" className=\"todo-builder__add-btn\">+</button>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default TodoBuilder;","import './CardContainer.css'\r\nimport TodoCard from './TodoCard';\r\nimport TodoBuilder from './TodoBuilder';\r\nimport { useState } from 'react';\r\nimport AddTodoButton from './AddTodoButton';\r\n\r\nfunction CardContainer(props) {\r\n    const [todoID, incrementTodoID] = useState(0);\r\n    const [todos, setTodos] = useState({});\r\n    const [completedTodos, setCompletedTodos] = useState({});\r\n    const [builderToggle, setBuilderToggle] = useState(false);\r\n    const toggleBuilder = () => {\r\n        setBuilderToggle(!builderToggle);\r\n    }\r\n    const addTodo = (details) => {\r\n        let newTodos = {...todos};\r\n        newTodos[todoID] = {};\r\n        newTodos[todoID]['text'] = details['text'];\r\n        newTodos[todoID]['completed'] = false;\r\n        incrementTodoID(todoID + 1);\r\n        setTodos(newTodos);\r\n        setBuilderToggle(!builderToggle);\r\n    }\r\n    const completeTodo = (id) => {\r\n        let todo = todos[id];\r\n        if (todo !== undefined) {\r\n            todo['completed'] = true;\r\n            let newTodos = {...todos};\r\n            let newCompletedTodos = {...completedTodos};\r\n            newCompletedTodos[id] = todo;\r\n            delete newTodos[id];\r\n            setTodos(newTodos);\r\n            setCompletedTodos(newCompletedTodos);\r\n        }\r\n        else {\r\n            todo = completedTodos[id];\r\n            todo['completed'] = false;\r\n            let newTodos = {...todos};\r\n            let newCompletedTodos = {...completedTodos};\r\n            newTodos[id] = todo;\r\n            delete newCompletedTodos[id];\r\n            setTodos(newTodos);\r\n            setCompletedTodos(newCompletedTodos);\r\n        }\r\n    }\r\n    const removeTodo = (id) => {\r\n        let todo = todos[id];\r\n        if (todo !== undefined) {\r\n            let newTodos = {...todos};\r\n            delete newTodos[id];\r\n            setTodos(newTodos);\r\n        }\r\n        else {\r\n            let newCompletedTodos = {...completedTodos};\r\n            todo = newCompletedTodos[id];\r\n            delete newCompletedTodos[id];\r\n            setCompletedTodos(newCompletedTodos);\r\n        }\r\n    }\r\n    const buildTodos = (tasks) => {\r\n        let todoArray = [];\r\n        let eventHandlers = {\r\n            completeTodo: completeTodo,\r\n            removeTodo: removeTodo\r\n        }\r\n        for (var key in tasks) {\r\n            let details = {\r\n                text: tasks[key]['text'],\r\n                id: key,\r\n                completed: tasks[key]['completed']\r\n\r\n            }\r\n            todoArray.push(<TodoCard key={key} eventHandlers={eventHandlers} details={details}/>);\r\n        }\r\n        return todoArray;\r\n    }\r\n    if (Object.keys(completedTodos).length > 0) {\r\n        return (\r\n            <div className=\"card-container\">\r\n                <AddTodoButton clickHandler={toggleBuilder} />\r\n                <TodoBuilder toggled={builderToggle} addTodo={addTodo} />\r\n                <div className='card-container__todo-div'>\r\n                    {buildTodos(todos)} \r\n                </div>\r\n                <div className=\"card-container__completed-todo-div\">\r\n                    <h4 className=\"card-container__completed-todo-div__title\">Completed:</h4>\r\n                    {buildTodos(completedTodos)}\r\n                </div>\r\n            </div>    \r\n        )\r\n    }\r\n    else {\r\n        return(\r\n            <div className=\"card-container\">\r\n                <AddTodoButton clickHandler={toggleBuilder} />\r\n                <TodoBuilder toggled={builderToggle} addTodo={addTodo} />\r\n                <div className='card-container__todo-div'>\r\n                    {buildTodos(todos)} \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\nexport default CardContainer;","import './App.css';\nimport TitleCard from './components/TitleCard';\nimport CardContainer from './components/CardContainer';\n\nfunction App() {\n    \n    return (\n        <div className=\"App\">\n            <TitleCard />\n            <CardContainer/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}